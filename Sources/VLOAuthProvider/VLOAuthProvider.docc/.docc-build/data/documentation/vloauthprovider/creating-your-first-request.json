{"identifier":{"url":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider\/Creating-Your-First-Request","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Prerequisites","type":"heading","anchor":"Prerequisites"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before creating OAuth requests, you’ll need:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Consumer key and consumer secret from your OAuth service provider"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The API endpoint URL you want to access","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic understanding of the OAuth 1.0 flow"}]}]}],"type":"unorderedList"},{"level":2,"text":"Step 1: Import VLOAuthProvider","type":"heading","anchor":"Step-1-Import-VLOAuthProvider"},{"type":"codeListing","syntax":"swift","code":["import VLOAuthProvider","import Foundation"]},{"level":2,"text":"Step 2: Create OAuth Parameters","type":"heading","anchor":"Step-2-Create-OAuth-Parameters"},{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"code":"OAuthParameters","type":"codeVoice"},{"text":" instance with your consumer credentials:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let parameters = OAuthParameters(","    consumerKey: \"your-consumer-key\",","    consumerSecret: \"your-consumer-secret\",","    signatureMethod: .hmac",")"]},{"level":3,"text":"Parameter Options","type":"heading","anchor":"Parameter-Options"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Consumer Key\/Secret","type":"text"}]},{"type":"text","text":": Your app’s credentials from the service provider"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Signature Method"}],"type":"strong"},{"text":": Choose ","type":"text"},{"code":".hmac","type":"codeVoice"},{"text":" for most services, ","type":"text"},{"code":".rsa","type":"codeVoice"},{"text":" for enterprise setups","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Nonce\/Timestamp"}],"type":"strong"},{"type":"text","text":": Automatically generated for security"}]}]}],"type":"unorderedList"},{"level":2,"text":"Step 3: Create the Original Request","type":"heading","anchor":"Step-3-Create-the-Original-Request"},{"type":"paragraph","inlineContent":[{"text":"Build your HTTP request as you normally would:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var request = URLRequest(url: URL(string: \"https:\/\/api.example.com\/1.1\/account\/verify_credentials.json\")!)","request.httpMethod = \"GET\"","request.addValue(\"application\/json\", forHTTPHeaderField: \"Accept\")"]},{"level":2,"text":"Step 4: Create OAuth Provider","type":"heading","anchor":"Step-4-Create-OAuth-Provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Initialize the OAuth provider:"}]},{"type":"codeListing","syntax":"swift","code":["let provider = OAuthProvider()"]},{"level":2,"text":"Step 5: Sign the Request","type":"heading","anchor":"Step-5-Sign-the-Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the provider to create a signed request:"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let signedRequest = try await provider.createSignedRequest(","        from: request,","        with: parameters,","        as: .header  \/\/ Recommended: use authorization header","    )","    ","    \/\/ Use signedRequest for your API call","    let (data, response) = try await URLSession.shared.data(for: signedRequest)","    ","} catch {","    print(\"OAuth signing failed: \\(error)\")","}"]},{"level":2,"text":"Parameter Transmission Methods","type":"heading","anchor":"Parameter-Transmission-Methods"},{"type":"paragraph","inlineContent":[{"text":"VLOAuthProvider supports different ways to include OAuth parameters:","type":"text"}]},{"level":3,"text":"Authorization Header (Recommended)","type":"heading","anchor":"Authorization-Header-Recommended"},{"type":"codeListing","syntax":"swift","code":["let signedRequest = try await provider.createSignedRequest(","    from: request,","    with: parameters,","    as: .header",")"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Pros","type":"text"}]},{"type":"text","text":": Clean URLs, parameters not visible in logs"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Cons"}]},{"type":"text","text":": More complex HTTP headers"}]},{"level":3,"text":"Query String","type":"heading","anchor":"Query-String"},{"type":"codeListing","syntax":"swift","code":["let signedRequest = try await provider.createSignedRequest(","    from: request,","    with: parameters,","    as: .queryString",")"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Pros"}]},{"text":": Simple, visible for debugging","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Cons"}]},{"text":": Parameters visible in URLs and logs","type":"text"}]},{"level":2,"text":"Complete Example","type":"heading","anchor":"Complete-Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s a complete example that puts it all together:"}]},{"type":"codeListing","syntax":"swift","code":["import VLOAuthProvider","import Foundation","","class TwitterAPIClient {","    private let provider = OAuthProvider()","    private let consumerKey = \"your-consumer-key\"","    private let consumerSecret = \"your-consumer-secret\"","    ","    func verifyCredentials() async throws -> Data {","        \/\/ Create OAuth parameters","        let parameters = OAuthParameters(","            consumerKey: consumerKey,","            consumerSecret: consumerSecret,","            signatureMethod: .hmac","        )","        ","        \/\/ Create original request","        var request = URLRequest(","            url: URL(string: \"https:\/\/api.twitter.com\/1.1\/account\/verify_credentials.json\")!","        )","        request.httpMethod = \"GET\"","        request.addValue(\"application\/json\", forHTTPHeaderField: \"Accept\")","        ","        \/\/ Sign the request","        let signedRequest = try await provider.createSignedRequest(","            from: request,","            with: parameters,","            as: .header","        )","        ","        \/\/ Make the API call","        let (data, _) = try await URLSession.shared.data(for: signedRequest)","        return data","    }","}"]},{"level":2,"text":"With Access Tokens","type":"heading","anchor":"With-Access-Tokens"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For requests that require user access tokens:"}]},{"type":"codeListing","syntax":"swift","code":["let parameters = OAuthParameters(","    consumerKey: \"your-consumer-key\",","    consumerSecret: \"your-consumer-secret\",","    requestToken: \"user-access-token\",","    requestSecret: \"user-access-token-secret\",","    signatureMethod: .hmac",")"]},{"level":2,"text":"Error Handling","type":"heading","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"text":"Handle common OAuth errors:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let signedRequest = try await provider.createSignedRequest(","        from: request,","        with: parameters,","        as: .header","    )","} catch let error as EncryptionError {","    switch error {","    case .emptyKey:","        print(\"Missing consumer secret\")","    case .emptyMessage:","        print(\"Invalid request parameters\")","    case .signingFailed:","        print(\"Cryptographic signing failed\")","    default:","        print(\"Other encryption error: \\(error)\")","    }","} catch {","    print(\"Request error: \\(error)\")","}"]},{"level":2,"text":"Next Steps","type":"heading","anchor":"Next-Steps"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about different "},{"type":"reference","identifier":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider\/Signature-Methods-Guide","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Understand the complete OAuth 1.0 flow in "},{"identifier":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider\/OAuth-Fundamentals","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"text":"Explore advanced parameter configuration in ","type":"text"},{"code":"OAuthParameters","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"metadata":{"role":"article","title":"Creating Your First OAuth Request","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","abstract":[{"text":"A step-by-step guide to creating your first signed OAuth request using VLOAuthProvider.","type":"text"}],"references":{"doc://com.jameslangdon.VLOAuthProvider/documentation/VLOAuthProvider":{"kind":"article","role":"collection","type":"topic","url":"\/documentation\/vloauthprovider","title":"VLOAuthProvider","abstract":[],"identifier":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider"},"doc://com.jameslangdon.VLOAuthProvider/documentation/VLOAuthProvider/Signature-Methods-Guide":{"kind":"article","url":"\/documentation\/vloauthprovider\/signature-methods-guide","abstract":[{"type":"text","text":"Understanding and choosing the right OAuth signature method for your application."}],"type":"topic","role":"article","identifier":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider\/Signature-Methods-Guide","title":"Signature Methods Guide"},"doc://com.jameslangdon.VLOAuthProvider/documentation/VLOAuthProvider/OAuth-Fundamentals":{"abstract":[{"text":"Understanding the OAuth 1.0 authentication protocol and how VLOAuthProvider implements it.","type":"text"}],"title":"OAuth 1.0 Fundamentals","url":"\/documentation\/vloauthprovider\/oauth-fundamentals","role":"article","type":"topic","identifier":"doc:\/\/com.jameslangdon.VLOAuthProvider\/documentation\/VLOAuthProvider\/OAuth-Fundamentals","kind":"article"}}}